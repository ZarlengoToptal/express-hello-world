<!-- /snippets/membership-cards.liquid -->

<div
   class="membership-slider-wrapper"
   data-section-type="membership-slider"
   data-section-id="{{ section.id }}"
   data-slider-dots="false">

  <div id="MembershipSlider-locations">
    {% for block in section.blocks %}
        {%- assign banner-title = block.settings.banner-title -%}
    	{%- assign title = block.settings.title -%}
        {%- assign price = block.settings.price -%}
    	{%- assign header = block.settings.header -%}
    	{%- assign header1 = block.settings.header1 -%}
        {%- assign description1 = block.settings.description -%}
    	{%- assign header2 = block.settings.header2 -%}
        {%- assign description2 = block.settings.description2 -%}
    	{%- assign header3 = block.settings.header3 -%}
        {%- assign description3 = block.settings.description3 -%}
        {%- assign quickview_link = block.settings.quickview_link -%}
        {%- assign membershipphoto = block.settings.membershipphoto -%}
        {%- assign header_price = block.settings.header_price -%}
        {%- assign popup_description = block.settings.popup_description -%}
        {%- assign short_code = block.settings.short_code -%}
        {%- assign html_1 = block.settings.html_1 -%}

    <div class="location">
      <div class="membership-card-wrapper">
        <div class="membership-cards-header title--secondary--new">
          <h3>{{ title }}</h3>
          <div class="membership__price__new title mono">{{ price }}</div>
        </div>


        <div class="membership-cards-body">
          {%- unless description1 == blank -%}
          	<h4 class="membership__header">{{ header }}</h4>
          	<div class="membership__description">{{ description1 }}</div>
          {%- endunless -%}
        </div>

        <div class="membership-buttons-wrapper">
          <div class="membership-buttons">
          {%- unless quickview_link == blank -%}
          <a role="button" class="treatments__quickview__btn" data-drawer-trigger aria-controls="drawer-name-{{ title }}" aria-expanded="false" href="{{ title }}">
            <div>LEARN MORE</div>
          </a>
          {%- endunless -%}


          {% if block.settings.html_1 != blank %}
          {% assign code_1 = block.settings.html_1 %}
          {% endif %}
          {% if block.settings.html_2 != blank %}
          {% assign code_2 = block.settings.html_2 %}
          {% endif %}
          {% if block.settings.html_3 != blank %}
          {% assign code_3 = block.settings.html_3 %}
          {% endif %}
          {% if block.settings.html_4 != blank %}
          {% assign code_4 = block.settings.html_4 %}
          {% endif %}

          <div class="sign-up-membership">
            {% if block.settings.short_code != blank %}

            {% assign items = block.settings.short_code | newline_to_br | split: "<br />" %}
            <ul>
              {% for item in items %}
              {% if item contains '[code_' %}
              {{ item | replace: '[code_1]', code_1 | replace: '[code_2]', code_2 | replace: '[code_3]', code_3 | replace: '[code_4]', code_4 }}
              {% else %}
              <li>{{item}}</li>
              {% endif %}
              {% endfor %}
            </ul>

          </div>
       {% endif  %} 
                  
                  
        </div>
       </div>

      </div>
    </div>    

    {% endfor %}
  </div>



	<div class="membership-cards">
    {% for block in section.blocks %}
      {%- assign title = block.settings.title -%}
      {%- assign price = block.settings.price -%}
      {%- assign description = block.settings.description -%}
      {%- assign quickview_link = block.settings.quickview_link -%}
      {%- assign membershipphoto = block.settings.membershipphoto -%}
      {%- assign header_price = block.settings.header_price -%}
      {%- assign header1 = block.settings.header1 -%}
      {%- assign description1 = block.settings.description1 -%}
      {%- assign header2 = block.settings.header2 -%}
      {%- assign description2 = block.settings.description2 -%}
      {%- assign header3 = block.settings.header3 -%}
      {%- assign description3 = block.settings.description3 -%}
      {%- assign short_code = block.settings.short_code -%}
      {%- assign html_1 = block.settings.html_1 -%}
        {%- unless quickview_link == blank -%}
        <section class="drawer drawer--left" data-drawer-target id="drawer-name-{{ title }}">
          <div class="drawer__overlay" data-drawer-close tabindex="-1"></div>
          <div class="drawer__wrapper">
            <div class="drawer__header">
              <div class="drawer__title">
                <div class="popup-image-wrapper">
                  <div class="popup-title">
                    <div class="popup-facial">{{ facial }}</div>
                    {{ title }}
                    <div class="popup-facial">{{ header_price }}</div>
                  </div>
                  {% if block.settings.membershipphoto %}
                  {%- assign treatmentphoto = block.settings.membershipphoto | img_url: 'large' -%}
                  <img class="lazyload" alt="{{ block.settings.membershipphoto.alt | default: section.settings.link_text }}" src="{{ block.settings.treatmentphoto | img_url: 'large' }}" data-src="{{ treatmentphoto }}" data-aspectratio="{{ section.settings.treatmentphoto.aspect_ratio }}" data-sizes="auto" style="width:100%"/>
                  <noscript>
                    <img src="{{ section.settings.membershipphoto | img_url: 'large' }}" alt="{{ section.settings.membershipphoto.alt | default: section.settings.link_text }}" class="image--flex"/>
                  </noscript>
                  {% endif %}
                  <button aria-label="Close Drawer" class="drawer__close" data-drawer-close></button>
                </div>
              </div>
            </div>
            <div class="drawer__inner">
              	
                  <div role=”heading” class="popup_subheader">{{ header1 }}</div>
                  <div class="membership__description">{{ description1 }}</div>
              
              
              	{% if block.settings.header2 != blank %}
              	  <div role=”heading” class="popup_subheader">{{ header2 }}</div>
                  <div class="membership__description">{{ description2 }}</div>
                {% endif %}
              
              	{% if block.settings.header3 != blank %}
                  <div role=”heading” class="popup_subheader">{{ header3 }}</div>
                  <div class="membership__description">{{ description3 }}</div>
                {% endif %}
              	<br>
            	<div class="sign-up-membership-inner">
                  {% if block.settings.short_code != blank %}

                  {% assign items = block.settings.short_code | newline_to_br | split: "<br />" %}
                  <ul>
                    {% for item in items %}
                    {% if item contains '[code_' %}
                    {{ item | replace: '[code_1]', code_1 | replace: '[code_2]', code_2 | replace: '[code_3]', code_3 | replace: '[code_4]', code_4 }}
                    {% else %}
                    <li>{{item}}</li>
                    {% endif %}
                    {% endfor %}
                  </ul>

                </div>
              <br><br>
             {% endif  %} 
            </div>
          </div>
        </section>
      {%- endunless -%}
    {% endfor %}
</div>
</div>

<script>

    /*!
    * Based on articles on
    * https://gomakethings.com
    */

    var drawer = function () {

      /**
      * Element.closest() polyfill
      * https://developer.mozilla.org/en-US/docs/Web/API/Element/closest#Polyfill
      */
      if (!Element.prototype.closest) {
        if (!Element.prototype.matches) {
          Element.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;
        }
        Element.prototype.closest = function (s) {
          var el = this;
          var ancestor = this;
          if (!document.documentElement.contains(el)) return null;
          do {
            if (ancestor.matches(s)) return ancestor;
            ancestor = ancestor.parentElement;
          } while (ancestor !== null);
          return null;
        };
      }


      // Trap Focus 
      // https://hiddedevries.nl/en/blog/2017-01-29-using-javascript-to-trap-focus-in-an-element
      //
      function trapFocus(element) {
        var focusableEls = element.querySelectorAll('a[href]:not([disabled]), button:not([disabled]), textarea:not([disabled]), input[type="text"]:not([disabled]), input[type="radio"]:not([disabled]), input[type="checkbox"]:not([disabled]), select:not([disabled])');
        var firstFocusableEl = focusableEls[0];  
        var lastFocusableEl = focusableEls[focusableEls.length - 1];
        var KEYCODE_TAB = 9;

        element.addEventListener('keydown', function(e) {
          var isTabPressed = (e.key === 'Tab' || e.keyCode === KEYCODE_TAB);

          if (!isTabPressed) { 
            return; 
          }

          if ( e.shiftKey ) /* shift + tab */ {
            if (document.activeElement === firstFocusableEl) {
              lastFocusableEl.focus();
                e.preventDefault();
              }
            } else /* tab */ {
            if (document.activeElement === lastFocusableEl) {
              firstFocusableEl.focus();
                e.preventDefault();
              }
            }
        });
      }       


      //
      // Settings
      //
      var settings = {
        speedOpen: 50,
        speedClose: 350,
        activeClass: 'is-active',
        visibleClass: 'is-visible',
        selectorTarget: '[data-drawer-target]',
        selectorTrigger: '[data-drawer-trigger]',
        selectorClose: '[data-drawer-close]',

      };


      //
      // Methods
      //

      // Toggle accessibility
      var toggleAccessibility = function (event) {
        if (event.getAttribute('aria-expanded') === 'true') {
          event.setAttribute('aria-expanded', false);
        } else {
          event.setAttribute('aria-expanded', true);
        }   
      };

      // Open Drawer
      var openDrawer = function (trigger) {

        // Find target
        var target = document.getElementById(trigger.getAttribute('aria-controls'));

        // Make it active
        target.classList.add(settings.activeClass);

        // Make body overflow hidden so it's not scrollable
        document.documentElement.style.overflow = 'hidden';

        // Toggle accessibility
        toggleAccessibility(trigger);

        // Make it visible
        setTimeout(function () {
          target.classList.add(settings.visibleClass);
          trapFocus(target);
        }, settings.speedOpen); 

      };

      // Close Drawer
      var closeDrawer = function (event) {

        // Find target
        var closestParent = event.closest(settings.selectorTarget),
          childrenTrigger = document.querySelector('[aria-controls="' + closestParent.id + '"');

        // Make it not visible
        closestParent.classList.remove(settings.visibleClass);

        // Remove body overflow hidden
        document.documentElement.style.overflow = '';

        // Toggle accessibility
        toggleAccessibility(childrenTrigger);

        // Make it not active
        setTimeout(function () {
          closestParent.classList.remove(settings.activeClass);
        }, settings.speedClose);             

      };

      // Click Handler
      var clickHandler = function (event) {

        // Find elements
        var toggle = event.target,
          open = toggle.closest(settings.selectorTrigger),
          close = toggle.closest(settings.selectorClose);

        // Open drawer when the open button is clicked
        if (open) {
          openDrawer(open);
        }

        // Close drawer when the close button (or overlay area) is clicked
        if (close) {
          closeDrawer(close);
        }

        // Prevent default link behavior
        if (open || close) {
          event.preventDefault();
        }

      };

      // Keydown Handler, handle Escape button
      var keydownHandler = function (event) {

        if (event.key === 'Escape' || event.keyCode === 27) {

          // Find all possible drawers
          var drawers = document.querySelectorAll(settings.selectorTarget),
            i;

          // Find active drawers and close them when escape is clicked
          for (i = 0; i < drawers.length; ++i) {
            if (drawers[i].classList.contains(settings.activeClass)) {
              closeDrawer(drawers[i]);
            }
          }

        }

      };


      //
      // Inits & Event Listeners
      //
      document.addEventListener('click', clickHandler, false);
      document.addEventListener('keydown', keydownHandler, false);


    };

    drawer();

  </script>

