<script type="text/javascript">
  const urlBase = "https://formula-fig-staging.cyclic.app";
  function convertDate(date) {
    var event = new Date(date).toISOString();
    event = event.split("T")[0];
    event = event.split("-");
    event = event.join("");
    return event;
  }
  function formatAMPM(date) {
    var hours = date.getHours();
    var minutes = date.getMinutes();
    var ampm = hours >= 12 ? 'pm' : 'am';
    hours = hours % 12;
    hours = hours ? hours : 12; // the hour '0' should be '12'
    minutes = minutes < 10 ? '0' + minutes : minutes;
    var strTime = hours + ':' + minutes + ' ' + ampm;
    return strTime;
  }
  function getTimeZone(date) {
    return date.toLocaleDateString('en-US', {
      day: '2-digit',
      timeZoneName: 'short',
    }).slice(4);
  }
  function padTo2Digits(num) {
    return num.toString().padStart(2, '0');
  }
  function formatOrderDate(date) {
    const monthName = date.toLocaleString('en-us', { month: 'short' });
    return [
      padTo2Digits(date.getMonth() + 1),
      monthName.toUpperCase(),
      date.getFullYear(),
    ].join(' ');
  }
  function formatAppointmentDate(date) {
    const dayOfWeekName = new Date(date).toLocaleString(
      'default', { weekday: 'long' }
    );
    const monthName = new Date(date).toLocaleString(
      'default', { month: 'long' }
    );
    return [
      dayOfWeekName + ',',
      padTo2Digits(date.getDate()),
      monthName,
      date.getFullYear(),
    ].join(' ').toUpperCase();
  }
  function formatDate(date) {
    const dayOfWeekName = new Date(date).toLocaleString(
      'default', { weekday: 'long' }
    );
    return [
      dayOfWeekName,
      [
        padTo2Digits(date.getMonth() + 1),
        padTo2Digits(date.getDate()),
        date.getFullYear(),
      ].join('/'),
    ].join(' ');
  }
</script>